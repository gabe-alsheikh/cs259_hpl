const char* lu259_cl =
"#define BLOCK_SIZE 16\n"
"#define BLOCK_SIZE_SUB 16\n"
"__kernel void\n"
"LUFact(\n"
"__global float* A,\n"
"__global float* lval,\n"
"__global float* nextLval,\n"
"__global float* nextDenom,\n"
"int n,\n"
"int N)\n"
"{\n"
"int brStart = BLOCK_SIZE * ((n+1)/BLOCK_SIZE + get_group_id(0));\n"
"int rEnd = brStart + BLOCK_SIZE;\n"
"int t = get_local_id(0);\n"
"int row = brStart + t;\n"
"int cStart = BLOCK_SIZE * ((n+1)/BLOCK_SIZE + get_group_id(1));\n"
"int cEnd = cStart + BLOCK_SIZE;\n"
"int rStart = row*N;\n"
"int nStart = n*N;\n"
"float l = lval[row];//Lcurr[t];\n"
"barrier(CLK_GLOBAL_MEM_FENCE); // may not be needed\n"
"if(row >= n+1)\n"
"{\n"
"float lneg = -l;\n"
"int i = (n+1) < cStart ? cStart : (n+1);\n"
"if(i > cStart && i < cEnd)\n"
"for(; i%4 != 0; i++)\n"
"A[rStart+i] += lneg*A[nStart+i];\n"
"for(; i < cEnd; i+=4)\n"
"{\n"
"A[rStart+i] += lneg*A[nStart+i];\n"
"A[rStart+i+1] += lneg*A[nStart+i+1];\n"
"A[rStart+i+2] += lneg*A[nStart+i+2];\n"
"A[rStart+i+3] += lneg*A[nStart+i+3];\n"
"}\n"
"}\n"
"if(cStart <= n+1 && cEnd > n+1)\n"
"{\n"
"nextLval[row] = A[rStart+n+1]; // use this and nextDenom to generate next lvals\n"
"if(row == n+1)\n"
"*nextDenom = A[rStart+n+1];\n"
"}\n"
"}\n"
;
